api.cors.origins="${API_ALLOWED_ORIGINS:http://d3e8oul9jxg0lz.cloudfront.net,http://localhost:3000}"
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

spring.kafka.admin.properties.security.protocol=SASL_SSL
spring.kafka.admin.properties.sasl.mechanism=AWS_MSK_IAM
spring.kafka.admin.properties.sasl.jaas.config=software.amazon.msk.auth.iam.IAMLoginModule required;
spring.kafka.admin.properties.sasl.client.callback.handler.class=software.amazon.msk.auth.iam.IAMClientCallbackHandler

spring.kafka.producer.properties.security.protocol=SASL_SSL
spring.kafka.producer.properties.sasl.mechanism=AWS_MSK_IAM
spring.kafka.producer.properties.sasl.jaas.config=software.amazon.msk.auth.iam.IAMLoginModule required;
spring.kafka.producer.properties.sasl.client.callback.handler.class=software.amazon.msk.auth.iam.IAMClientCallbackHandler

spring.kafka.consumer.properties.security.protocol=SASL_SSL
spring.kafka.consumer.properties.sasl.mechanism=AWS_MSK_IAM
spring.kafka.consumer.properties.sasl.jaas.config=software.amazon.msk.auth.iam.IAMLoginModule required;
spring.kafka.consumer.properties.sasl.client.callback.handler.class=software.amazon.msk.auth.iam.IAMClientCallbackHandler

spring.data.mongodb.uri=${MONGO_DB_URL:mongodb://localhost:27017/dqs}